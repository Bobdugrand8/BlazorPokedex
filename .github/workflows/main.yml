name: Deploy to GitHub Pages

# Declaring custom variables
env:
  PROJECT_NAME: BlazorPokedex.Wasm
  PUBLISH_FOLDER: Release
  PUBLISH_FOLDER_OUTPUT: Release/output
  REPO_NAME: ${{ github.event.repository.name }}

# Run workflow on every push to the master branch
on: 
  push: 
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2
    
    #- name: Setup .NET Core CLI
     # uses: baruchiro/github-actions@0.0.1
    
    # sets up .NET SDK 7.0.101
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: 7.0.101

     # Install wasm-tools
    - name: Install wasm-tools
      run: dotnet workload install wasm-tools

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish $PROJECT_NAME/$PROJECT_NAME.csproj -c Release -o $PUBLISH_FOLDER_OUTPUT --nologo
      
    # Fix integrity errors
    - name: Fix service-worker-assets.js hashes
      working-directory: $PUBLISH_FOLDER_OUTPUT/wwwroot
      run: |
        jsFile=$(<service-worker-assets.js)
        # remove JavaScript from contents so it can be interpreted as JSON
        json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
        # grab the assets JSON array
        assets=$(echo "$json" | jq '.assets[]' -c)
        for asset in $assets
        do
          oldHash=$(echo "$asset" | jq '.hash')
          #remove leading and trailing quotes
          oldHash="${oldHash:1:-1}"
          path=$(echo "$asset" | jq '.url')
          #remove leading and trailing quotes
          path="${path:1:-1}"
          newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
          
          if [ $oldHash != $newHash ]; then
            # escape slashes for json
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            newHash=$(echo "$newHash" | sed 's;/;\\/;g')
            echo "Updating hash for $path from $oldHash to $newHash"
            # escape slashes second time for sed
            oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
            jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
          fi
        done

        echo -n "$jsFile" > service-worker-assets.js
    
    # Use NodeJS react-snap utitility to prerender static website
    - name: prerender Blazor client
      working-directory: $PUBLISH_FOLDER_OUTPUT
      run: npx react-snap
      
    # change base tag in all html files to include subfolder
    - name: Change base tag
      working-directory: $PUBLISH_FOLDER_OUTPUT/wwwroot
      run: |
        find . -name "*.html" | while read htmlFile; do
            sed -i 's/<base href="\/"/<base href="\/$REPO_NAME\/"/g' $htmlFile
            sed -i 's/<script type="text\/javascript">var Module; window.__wasmmodulecallback__(); delete window.__wasmmodulecallback__;<\/script><script src="_framework\/dotnet.5.0.1.js" defer="" integrity="sha256-SWZOE2EsCqc\/7dPgJrcFqUvVvdeJ9cipeZ2NFMC9v2s=" crossorigin="anonymous"><\/script>//g' $htmlFile
        done
    
    
    # copy index.html to 404.html to serve the same file when a file is not found
    #- name: copy index.html to 404.html
     # run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch $PUBLISH_FOLDER_OUTPUT/wwwroot/.nojekyll
      
    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: $PUBLISH_FOLDER_OUTPUT/wwwroot
